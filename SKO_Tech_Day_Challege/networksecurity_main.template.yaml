AWSTemplateFormatVersion: 2010-09-09
Description: "Create AWS Network Firewall Stack - Tech Day Challenge 2022"

Parameters:
  AvailabilityZone:
    Type: String
  VPCID:
    Type: String
  IGWID:
    Type: String

Resources:
PrivateSubnet:
  Type: AWS::EC2::Subnet
  Properties:
    AvailabilityZone: !Ref AvailabilityZone
    VpcId: !Ref VPCID
    CidrBlock: "10.0.96.0/24"
    Tags:
      - Key: Name
        Value: PrivateSubnet

FirewallSubnet:
  Type: AWS::EC2::Subnet
  Properties:
    VpcId: !Ref VPCID
    CidrBlock: "10.0.192.0/24"
    AvailabilityZone: !Ref AvailabilityZone
    MapPublicIpOnLaunch: false
    Tags:
      - Key: Name
        Value: FirewallSubnet

  EndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Port 80
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
          VpcId: !Ref VPCID

AWSNetworkFirewall:
  Type: "AWS::NetworkFirewall::Firewall"
  Properties:
    FirewallName: "AWS Network Firewall"
    VpcId: !Ref VPCID
    SubnetMappings:
      - SubnetId: !Ref FirewallSubnet
    FirewallPolicyArn: !Ref AWSFirewallPolicy
    DeleteProtection: false
    FirewallPolicyChangeProtection: false
    SubnetChangeProtection: false
    Tags:
      - Key: "Name"
        Value: AWSNetworkFirewall
    Description: "AWS Network Firewall"

AWSFirewallPolicy:
  Type: "AWS::NetworkFirewall::FirewallPolicy"
  Properties:
    FirewallPolicyName: "AWSFirewallPolicy"
    FirewallPolicy:
      StatelessDefaultActions:
        - "aws:drop"
      StatelessFragmentDefaultActions:
        - "aws:drop"

FirewallLogFlowGroup:
  Type: AWS::Logs::LogGroup
  Properties:
    LogGroupName: !Sub "/${AWS::StackName}/anfw/flow"

FirewallLogAlertGroup:
  Type: AWS::Logs::LogGroup
  Properties:
    LogGroupName: !Sub "/${AWS::StackName}/anfw/alert"

FirewallLog:
  Type: AWS::NetworkFirewall::LoggingConfiguration
  Properties:
    FirewallArn: !Ref AWSNetworkFirewall
    LoggingConfiguration:
      LogDestinationConfigs:
        - LogType: FLOW
          LogDestinationType: CloudWatchLogs
          LogDestination:
            logGroup: !Sub "/${AWS::StackName}/anfw/flow"
        - LogType: ALERT
          LogDestinationType: CloudWatchLogs
          LogDestination:
            logGroup: !Sub "/${AWS::StackName}/anfw/alert"

PrivateSubnetRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId: !Ref VPCID
    Tags:
      - Key: Name
        Value: PrivateSubnetRouteTable

PrivateSubnetRouteTableAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  DependsOn: PrivateSubnet
  Properties:
    RouteTableId: !Ref PrivateSubnetRouteTable
    SubnetId: !Ref PrivateSubnet

PrivateSubnetDefaultRoute:
  Type: AWS::EC2::Route
  DependsOn: AWSNetworkFirewall
  Properties:
    DestinationCidrBlock: "0.0.0.0/0"
    VpcEndpointId: !GetAtt AWSNetworkFirewall.EndpointIds
    RouteTableId: !Ref PrivateSubnetRouteTable

FirewallSubnetRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId: !Ref VPCID
    Tags:
      - Key: Name
        Value: FirewallSubnetRouteTable

FirewallSubnetRouteTableAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  DependsOn: FirewallSubnet
  Properties:
    RouteTableId: !Ref FirewallSubnetRouteTable
    SubnetId: !Ref FirewallSubnet

FirewallSubnetDefaultRoute:
  Type: AWS::EC2::Route
  DependsOn: !Ref IGWID
  Properties:
    DestinationCidrBlock: "0.0.0.0/0"
    GatewayId: !Ref IGWID
    RouteTableId: !Ref FirewallSubnetRouteTable

IngressRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId: !Ref VPCID
    Tags:
      - Key: Name
        Value: IngressRouteTable

IngressRouteTableAssociation:
  Type: AWS::EC2::GatewayRouteTableAssociation
  DependsOn: !Ref IGWID
  Properties:
    RouteTableId: !Ref IngressRouteTable
    GatewayId: !Ref IGWID

IngressRoute:
  Type: AWS::EC2::Route
  DependsOn: AWSNetworkFirewall
  Properties:
    DestinationCidrBlock: "10.0.96.0/24"
    VpcEndpointId: !GetAtt AWSNetworkFirewall.EndpointIds
    RouteTableId: !Ref IngressRouteTable