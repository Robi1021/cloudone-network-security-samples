AWSTemplateFormatVersion: 2010-09-09

Parameters:
  # ------------------------------------------------------------#
  # Import Master.yaml template
  # ------------------------------------------------------------#
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Select the AZ to deploy GWLB Endpoint. Note:
      The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  GWLBEndpointSubnet1CIDR:
    Description: Enter the GWLB Subnet CIDR to deploy the GWLBE, CIDR block for the GWLB DMZ subnet 1 located in Availability Zone
      1
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.201.0/24
  GWLBEndpointSubnet2CIDR:
    Description: Enter the GWLB Subnet CIDR to deploy the GWLBE, CIDR block for the GWLB DMZ subnet 2 located in Availability Zone
      2
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.202.0/24
  GWLBEndpointSubnetTag1:
    Description: tag to add to GWLB subnets, in format Key=Value (Optional)
    Type: String
    AllowedPattern: ^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"'\[\]\{\}]*)?$
    ConstraintDescription: tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: Network=Public
  GWLBEndpointSubnetTag2:
    Description: tag to add to GWLB subnets, in format Key=Value (Optional)
    Type: String
    AllowedPattern: ^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"'\[\]\{\}]*)?$
    ConstraintDescription: tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: ''
  GWLBEndpointSubnetTag3:
    Description: tag to add to GWLB subnets, in format Key=Value (Optional)
    Type: String
    AllowedPattern: ^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"'\[\]\{\}]*)?$
    ConstraintDescription: tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: ''
  # ------------------------------------------------------------#
  # Import c1nsSecurityVPCTemplate stack(security_vpc.yml file)
  # ------------------------------------------------------------#
  VPC:
    Description: Enter the VPC ID where you want to deploy the GWLB Endpoint
    Type: String
  InternetGateway:
    Description: IGW ID of the VPC where the GWLBE is deployed
    Type: String
  VPCEndpointServiceName:
    Description: VPC Endpoint Service Name
    Type: String

# ------------------------------------------------------------#
# Conditions
# ------------------------------------------------------------#
Conditions:
  GWLBEndpointSubnetTag1Condition: !Not
    - !Equals
      - !Ref 'GWLBEndpointSubnetTag1'
      - ''
  GWLBEndpointSubnetTag2Condition: !Not
    - !Equals
      - !Ref 'GWLBEndpointSubnetTag2'
      - ''
  GWLBEndpointSubnetTag3Condition: !Not
    - !Equals
      - !Ref 'GWLBEndpointSubnetTag3'
      - ''

Resources:
  # ------------------------------------------------------------#
  # Create GWLB Subnet for GWLB Endpoint
  # ------------------------------------------------------------#
  GWLBEndpointSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref GWLBEndpointSubnet1CIDR
      AvailabilityZone: !Select
        - 0
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: GWLB subnet 1
        - !If
          - GWLBEndpointSubnetTag1Condition
          - Key: !Select
              - 0
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag1
            Value: !Select
              - 1
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag1
          - !Ref AWS::NoValue
        - !If
          - GWLBEndpointSubnetTag2Condition
          - Key: !Select
              - 0
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag2
            Value: !Select
              - 1
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag2
          - !Ref AWS::NoValue
        - !If
          - GWLBEndpointSubnetTag3Condition
          - Key: !Select
              - 0
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag3
            Value: !Select
              - 1
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag3
          - !Ref AWS::NoValue
      MapPublicIpOnLaunch: true
  GWLBEndpointSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref GWLBEndpointSubnet2CIDR
      AvailabilityZone: !Select
        - 1
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: GWLB subnet 2
        - !If
          - GWLBEndpointSubnetTag1Condition
          - Key: !Select
              - 0
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag1
            Value: !Select
              - 1
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag1
          - !Ref AWS::NoValue
        - !If
          - GWLBEndpointSubnetTag2Condition
          - Key: !Select
              - 0
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag2
            Value: !Select
              - 1
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag2
          - !Ref AWS::NoValue
        - !If
          - GWLBEndpointSubnetTag3Condition
          - Key: !Select
              - 0
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag3
            Value: !Select
              - 1
              - !Split
                - '='
                - !Ref GWLBEndpointSubnetTag3
          - !Ref AWS::NoValue
      MapPublicIpOnLaunch: true

  # ------------------------------------------------------------#
  # Create Route table to attach to the GWLB Subnet for GWLB Endpoint
  # ------------------------------------------------------------#
  GWLBEndpointSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ForGWLBEndpointSubnet1RouteTable
  GWLBEndpointSubnet1Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref GWLBEndpointSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  GWLBEndpointSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref GWLBEndpointSubnet1
      RouteTableId: !Ref GWLBEndpointSubnet1RouteTable

  GWLBEndpointSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ForGWLBEndpointSubnet2RouteTable
  GWLBEndpointSubnet2Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref GWLBEndpointSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  GWLBEndpointSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref GWLBEndpointSubnet2
      RouteTableId: !Ref GWLBEndpointSubnet2RouteTable

  # ------------------------------------------------------------#
  # Create GWLB Endpoint
  # ------------------------------------------------------------#
  GWLBEndpoint1:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Ref VPCEndpointServiceName
      SubnetIds:
        - !Ref GWLBEndpointSubnet1
      VpcEndpointType: GatewayLoadBalancer
      VpcId: !Ref VPC

  GWLBEndpoint2:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Ref VPCEndpointServiceName
      SubnetIds:
        - !Ref GWLBEndpointSubnet2
      VpcEndpointType: GatewayLoadBalancer
      VpcId: !Ref VPC

Outputs:
  GWLBEndpointSubnet1Route:
    Description: ID of GWLB Subnet 1 Route Table
    Value: !Ref GWLBEndpointSubnet1RouteTable
  GWLBEndpointSubnet1ID:
    Description: ID of GWLB Subnet 1
    Value: !Ref GWLBEndpointSubnet1