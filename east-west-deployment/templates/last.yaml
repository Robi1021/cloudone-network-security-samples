AWSTemplateFormatVersion: 2010-09-09

Parameters:
  # ------------------------------------------------------------#
  # Import Master.yaml template
  # ------------------------------------------------------------#
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Select the AZ to deploy GWLB Endpoint. Note:
      The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  GWLBEndpointSubnet1CIDR:
    Description: Enter the GWLB Subnet CIDR to deploy the GWLBE, CIDR block for the GWLB DMZ subnet 1 located in Availability Zone
      1
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.201.0/24
  GWLBEndpointSubnet2CIDR:
    Description: Enter the GWLB Subnet CIDR to deploy the GWLBE, CIDR block for the GWLB DMZ subnet 2 located in Availability Zone
      2
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.202.0/24

Resources:
  # ------------------------------------------------------------#
  # Create GWLB Subnet for GWLB Endpoint
  # ------------------------------------------------------------#
  GWLBEndpointSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref GWLBEndpointSubnet1CIDR
      AvailabilityZone: !Select
        - 0
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: GWLB subnet 1
      MapPublicIpOnLaunch: true
  GWLBEndpointSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref GWLBEndpointSubnet2CIDR
      AvailabilityZone: !Select
        - 1
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: GWLB subnet 2
      MapPublicIpOnLaunch: true

  # ------------------------------------------------------------#
  # Create Route table to attach to the GWLB Subnet for GWLB Endpoint
  # ------------------------------------------------------------#
  GWLBEndpointSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ForGWLBEndpointSubnet1RouteTable
  GWLBEndpointSubnet1Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref GWLBEndpointSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NATGateway1
  GWLBEndpointSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref GWLBEndpointSubnet1
      RouteTableId: !Ref GWLBEndpointSubnet1RouteTable

  GWLBEndpointSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ForGWLBEndpointSubnet2RouteTable
  GWLBEndpointSubnet2Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref GWLBEndpointSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NATGateway2
  GWLBEndpointSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref GWLBEndpointSubnet2
      RouteTableId: !Ref GWLBEndpointSubnet2RouteTable

  # ------------------------------------------------------------#
  # Create GWLB Endpoint
  # ------------------------------------------------------------#
  GWLBEndpoint1:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Ref VPCEndpointServiceName
      SubnetIds:
        - !Ref GWLBEndpointSubnet1
      VpcEndpointType: GatewayLoadBalancer
      VpcId: !Ref VPC

  GWLBEndpoint2:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Ref VPCEndpointServiceName
      SubnetIds:
        - !Ref GWLBEndpointSubnet2
      VpcEndpointType: GatewayLoadBalancer
      VpcId: !Ref VPC


  # ------------------------------------------------------------#
  # Create TGW Attachment Subnet for TGW Attachment
  # ------------------------------------------------------------#
  TGWAttachmentSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref TGWAttachmentSubnet1CIDR
      AvailabilityZone: !Select
        - 0
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: TGW Attachment subnet 1
      MapPublicIpOnLaunch: true
  TGWAttachmentSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref TGWAttachmentSubnet2CIDR
      AvailabilityZone: !Select
        - 1
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: TGW Attachment subnet 2
      MapPublicIpOnLaunch: true

  # ----------------------------------------------------------------------------#
  # Create Route table to attach to the TGW Attachment Subnet for TGW Attachment
  # ----------------------------------------------------------------------------#
  TGWAttachmentSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ForTGWAttachmentSubnet1RouteTable
  TGWAttachmentSubnet1Route:
    DependsOn: GWLBEndpoint1
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref TGWAttachmentSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref GWLBEndpoint1
  TGWAttachmentSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref TGWAttachmentSubnet1
      RouteTableId: !Ref TGWAttachmentSubnet1RouteTable
  TGWAttachmentSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ForTGWAttachmentSubnet2RouteTable
  TGWAttachmentSubnet2Route:
    DependsOn: GWLBEndpoint2
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref TGWAttachmentSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref GWLBEndpoint2
  TGWAttachmentSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref TGWAttachmentSubnet2
      RouteTableId: !Ref TGWAttachmentSubnet2RouteTable

Outputs:
  GWLBEndpointSubnet1Route:
    Description: ID of GWLB Subnet 1 Route Table
    Value: !Ref GWLBEndpointSubnet1RouteTable
  GWLBEndpointSubnet2Route:
    Description: ID of GWLB Subnet 2 Route Table
    Value: !Ref GWLBEndpointSubnet2RouteTable
  GWLBEndpointSubnet1ID:
    Description: ID of GWLB Subnet 1
    Value: !Ref GWLBEndpointSubnet1
  GWLBEndpointSubnet2ID:
    Description: ID of GWLB Subnet 2
    Value: !Ref GWLBEndpointSubnet2