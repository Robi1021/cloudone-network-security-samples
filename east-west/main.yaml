AWSTemplateFormatVersion: '2010-09-09'
Description: Demo CloudFormation for separate VPC for east-west inspection
#-------------------
# Parameters: Specified by the user when creating a stack
#-------------------
Parameters:
  IpsInstanceType:
    AllowedValues:
      - f1.2xlarge
      - f1.4xlarge
      - c5.xlarge
      - c5.9xlarge
      - c5.4xlarge
      - c5.2xlarge
      - c5n.xlarge
      - c5n.9xlarge
      - c5n.4xlarge
      - c5n.2xlarge
    Default: c5n.4xlarge
    Description: AWS EC2 IPS instance type
    Type: String
  KeyPairName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: SSH Key to access instances
    Type: AWS::EC2::KeyPair::KeyName
  VpcCidr:
    Default: 10.0.0.0/24
    Description: CIDR for the Security VPC. Each Availability Zone uses a /25 CIDR
    Type: String
  ApiKey:
    Type: String
  AvailabilityZones:
    Description: Availability Zones to use. Each uses a /25 subnet of the VPC
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'
  NumAvailabilityZones:
    Description: Number of Availability Zones chosen - to help with CloudFormation. Each uses a /25 CIDR and an Elastic IP
    Type: Number
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: network-security-csaas-quickstarts
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: eastwest/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
Conditions:
  CreateTwo: !Or [ !Equals [ !Ref NumAvailabilityZones, 2 ], !Equals [ !Ref NumAvailabilityZones, 3 ], !Equals [ !Ref NumAvailabilityZones, 4 ], !Equals [ !Ref NumAvailabilityZones, 5 ] ]
  CreateThree: !Or [ !Equals [ !Ref NumAvailabilityZones, 3 ], !Equals [ !Ref NumAvailabilityZones, 4 ], !Equals [ !Ref NumAvailabilityZones, 5 ] ]
  CreateFour: !Or [ !Equals [ !Ref NumAvailabilityZones, 4 ], !Equals [ !Ref NumAvailabilityZones, 5 ] ]
  CreateFive: !Equals [ !Ref NumAvailabilityZones, 5 ]
Resources:
  SecurityVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      Tags:
        - Key: Name
          Value: 'NSSecurityVpc'
  SecurityIgw:
    Type: AWS::EC2::InternetGateway
  SecurityIgwConn:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref SecurityIgw
      VpcId: !Ref SecurityVpc
  TrafficDataPortSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all traffic through the data ports of Cloud One Network Security
      VpcId: !Ref SecurityVpc
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
          FromPort: -1
          ToPort: -1
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
          FromPort: -1
          ToPort: -1
      Tags:
        - Key: Name
          Value: 'NSDataPortSecGroup'
  MgmtPortSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for the Management ports of Cloud One Network Security
      VpcId: !Ref SecurityVpc
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
          FromPort: -1
          ToPort: -1
      Tags:
        - Key: Name
          Value: 'NSMgmtPortSecGroup'

  NetworkSecurityRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
      Policies:
      - PolicyDocument:
          Id: NetworkSecurityInlinePolicyCWL
          Statement:
          - Action:
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - cloudwatch:PutMetricData
            Effect: Allow
            Resource:
            - "*"
            Sid: AllowCWEvents
          Version: '2012-10-17'
        PolicyName:
          Fn::Sub:
          - NetworkSecurityPolicy_${StackName}
          - StackName:
              Ref: AWS::StackName

  NetworkSecurityInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - Ref: NetworkSecurityRole
  DeploymentOne:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/eastwestdeployment.yaml'
      Parameters:
        AvailabilityZone: !Select [ 0, !Ref AvailabilityZones ]
        KeyPairName: !Ref KeyPairName
        IpsInstanceType: !Ref IpsInstanceType
        ApiKey: !Ref ApiKey
        Cidr: !Select [ 0, !Cidr [ !GetAtt SecurityVpc.CidrBlock, 1, 7 ]]
        VpcId: !Ref SecurityVpc
        IgwId: !Ref SecurityIgw
        MgmtPortSecGroup: !Ref MgmtPortSecGroup
        TrafficDataPortSecGroup: !Ref TrafficDataPortSecGroup
        NetworkSecurityInstanceProfile: !Ref NetworkSecurityInstanceProfile
  DeploymentTwo:
    Type: 'AWS::CloudFormation::Stack'
    Condition: CreateTwo
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/eastwestdeployment.yaml'
      Parameters:
        AvailabilityZone: !Select [ 1, !Ref AvailabilityZones ]
        KeyPairName: !Ref KeyPairName
        IpsInstanceType: !Ref IpsInstanceType
        ApiKey: !Ref ApiKey
        Cidr: !Select [ 1, !Cidr [ !GetAtt SecurityVpc.CidrBlock, 2, 7 ]]
        VpcId: !Ref SecurityVpc
        IgwId: !Ref SecurityIgw
        MgmtPortSecGroup: !Ref MgmtPortSecGroup
        TrafficDataPortSecGroup: !Ref TrafficDataPortSecGroup
        NetworkSecurityInstanceProfile: !Ref NetworkSecurityInstanceProfile
  DeploymentThree:
    Type: 'AWS::CloudFormation::Stack'
    Condition: CreateThree
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/eastwestdeployment.yaml'
      Parameters:
        AvailabilityZone: !Select [ 2, !Ref AvailabilityZones ]
        KeyPairName: !Ref KeyPairName
        IpsInstanceType: !Ref IpsInstanceType
        ApiKey: !Ref ApiKey
        Cidr: !Select [ 2, !Cidr [ !GetAtt SecurityVpc.CidrBlock, 3, 7 ]]
        VpcId: !Ref SecurityVpc
        IgwId: !Ref SecurityIgw
        MgmtPortSecGroup: !Ref MgmtPortSecGroup
        TrafficDataPortSecGroup: !Ref TrafficDataPortSecGroup
        NetworkSecurityInstanceProfile: !Ref NetworkSecurityInstanceProfile
  DeploymentFour:
    Type: 'AWS::CloudFormation::Stack'
    Condition: CreateFour
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/eastwestdeployment.yaml'
      Parameters:
        AvailabilityZone: !Select [ 3, !Ref AvailabilityZones ]
        KeyPairName: !Ref KeyPairName
        IpsInstanceType: !Ref IpsInstanceType
        ApiKey: !Ref ApiKey
        Cidr: !Select [ 3, !Cidr [ !GetAtt SecurityVpc.CidrBlock, 4, 7 ]]
        VpcId: !Ref SecurityVpc
        IgwId: !Ref SecurityIgw
        MgmtPortSecGroup: !Ref MgmtPortSecGroup
        TrafficDataPortSecGroup: !Ref TrafficDataPortSecGroup
        NetworkSecurityInstanceProfile: !Ref NetworkSecurityInstanceProfile
  DeploymentFive:
    Type: 'AWS::CloudFormation::Stack'
    Condition: CreateFive
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/eastwestdeployment.yaml'
      Parameters:
        AvailabilityZone: !Select [ 4, !Ref AvailabilityZones ]
        KeyPairName: !Ref KeyPairName
        IpsInstanceType: !Ref IpsInstanceType
        ApiKey: !Ref ApiKey
        Cidr: !Select [ 4, !Cidr [ !GetAtt SecurityVpc.CidrBlock, 5, 7 ]]
        VpcId: !Ref SecurityVpc
        IgwId: !Ref SecurityIgw
        MgmtPortSecGroup: !Ref MgmtPortSecGroup
        TrafficDataPortSecGroup: !Ref TrafficDataPortSecGroup
        NetworkSecurityInstanceProfile: !Ref NetworkSecurityInstanceProfile
